{"version":3,"file":"require-valid-chaintypes.js","sourceRoot":"","sources":["../../src/rules/require-valid-chaintypes.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;;;AAEtC,gDAAwB;AACxB,0CAA8C;AAE9C,iCAAsC;AAEtC,MAAqB,sBAAsB;IAA3C;QACE,SAAI,GAAG,eAAQ,CAAC,MAAM,CAAC;QACvB,SAAI,GAAG,0BAA0B,CAAC;QAClC,gBAAW,GAAG,kEAAkE,CAAC;IAsBnF,CAAC;IApBC,KAAK,CAAC,QAAQ,CAAC,GAAY;;QACzB,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ;YAAE,OAAO,IAAI,CAAC;QAE1C,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QAExC,6BAA6B;QAC7B,IAAI,CAAC,CAAA,MAAA,MAAM,CAAC,OAAO,CAAC,UAAU,0CAAE,IAAI,CAAA;YAAE,OAAO,IAAI,CAAC;QAElD,uDAAuD;QACvD,MAAM,EAAC,GAAG,EAAC,GAAG,cAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM;YAAE,OAAO,IAAI,CAAC;QAEjD,IAAI;YACF,MAAM,aAAa,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC/E,IAAA,wBAAe,EAAC,aAAa,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,KAAK,CAAC;SACd;IACH,CAAC;CACF;AAzBD,yCAyBC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport path from 'path';\nimport {parseChainTypes} from '@subql/common';\nimport {Context} from '../context';\nimport {Rule, RuleType} from './rule';\n\nexport default class RequireValidChainTypes implements Rule {\n  type = RuleType.Schema;\n  name = 'require-valid-chaintypes';\n  description = 'Specified chain types file must match the polkadot RegistryTypes';\n\n  async validate(ctx: Context): Promise<boolean> {\n    if (ctx.data.schema.isV0_0_1) return true;\n\n    const schema = ctx.data.schema.asV0_2_0;\n\n    // No chain types to validate\n    if (!schema.network.chaintypes?.file) return true;\n\n    //TODO, skip validate if chaintype is js format for now\n    const {ext} = path.parse(schema.network.chaintypes.file);\n    if (ext === '.js' || ext === '.cjs') return true;\n\n    try {\n      const rawChainTypes = await ctx.reader.getFile(schema.network.chaintypes.file);\n      parseChainTypes(rawChainTypes);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n"]}