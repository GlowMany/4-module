{"version":3,"file":"ipfs-reader.js","sourceRoot":"","sources":["../../src/readers/ipfs-reader.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;;;;;;;;;;;AAEtC,wEAAoC;AACpC,sDAA2B;AAI3B,MAAa,UAAU;IAGrB,YAA6B,GAAW,EAAE,OAAe;QAA5B,QAAG,GAAH,GAAG,CAAQ;QACtC,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;QACD,IAAI,CAAC,IAAI,GAAG,0BAAI,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,OAAO,EAAC,CAAC,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,MAAM;QACV,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAED,KAAK,CAAC,gBAAgB;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,QAAgB;;QAC5B,IAAI;YACF,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;;gBAE3D,uBAAuB;gBACvB,KAAwB,IAAA,QAAA,cAAA,GAAG,CAAA,SAAA;oBAAhB,MAAM,GAAG,gBAAA,CAAA;oBAClB,OAAO,iBAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;iBACrD;;;;;;;;;SACF;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;CACF;AA9BD,gCA8BC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport IPFS from 'ipfs-http-client';\nimport yaml from 'js-yaml';\nimport {IPackageJson} from 'package-json-type';\nimport {Reader} from './reader';\n\nexport class IPFSReader implements Reader {\n  private ipfs: IPFS.IPFSHTTPClient;\n\n  constructor(private readonly cid: string, gateway: string) {\n    if (!gateway) {\n      throw new Error('IPFS Gateway not provided');\n    }\n    this.ipfs = IPFS.create({url: gateway});\n  }\n\n  async getPkg(): Promise<IPackageJson | undefined> {\n    return Promise.resolve(undefined);\n  }\n\n  async getProjectSchema(): Promise<unknown | undefined> {\n    return this.getFile(this.cid);\n  }\n\n  async getFile(fileName: string): Promise<unknown | undefined> {\n    try {\n      const req = this.ipfs.cat(fileName.replace('ipfs://', ''));\n\n      // Should be first item\n      for await (const res of req) {\n        return yaml.load(Buffer.from(res).toString('utf8'));\n      }\n    } catch (e) {\n      return undefined;\n    }\n  }\n}\n"]}