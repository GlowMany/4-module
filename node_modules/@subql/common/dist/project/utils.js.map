{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/project/utils.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,wCAQsB;AAEtB,SAAgB,uBAAuB,CACrC,EAA6D;IAE7D,OAAO,EAAE,CAAC,eAAe,KAAK,wBAAgB,CAAC,KAAK,CAAC;AACvD,CAAC;AAJD,0DAIC;AAED,SAAgB,uBAAuB,CACrC,EAA6D;IAE7D,OAAO,EAAE,CAAC,eAAe,KAAK,wBAAgB,CAAC,KAAK,CAAC;AACvD,CAAC;AAJD,0DAIC;AAED,SAAgB,sBAAsB,CACpC,EAA6D;IAE7D,OAAO,EAAE,CAAC,eAAe,KAAK,wBAAgB,CAAC,IAAI,CAAC;AACtD,CAAC;AAJD,wDAIC;AAED,SAAgB,UAAU,CAA+B,EAAmB;IAC1E,OAAO,EAAE,CAAC,IAAI,KAAK,2BAAmB,CAAC,OAAO,IAAI,CAAC,CAAE,EAAuC,CAAC,SAAS,CAAC;AACzG,CAAC;AAFD,gCAEC;AAED,SAAgB,WAAW,CAAC,EAAmB;IAC7C,OAAO,EAAE,CAAC,IAAI,KAAK,2BAAmB,CAAC,OAAO,CAAC;AACjD,CAAC;AAFD,kCAEC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  SecondLayerHandlerProcessor,\n  SubqlCustomDatasource,\n  SubqlDatasource,\n  SubqlDatasourceKind,\n  SubqlHandlerKind,\n  SubqlNetworkFilter,\n  SubqlRuntimeDatasource,\n} from '@subql/types';\n\nexport function isBlockHandlerProcessor<T extends SubqlNetworkFilter, E>(\n  hp: SecondLayerHandlerProcessor<SubqlHandlerKind, T, unknown>\n): hp is SecondLayerHandlerProcessor<SubqlHandlerKind.Block, T, E> {\n  return hp.baseHandlerKind === SubqlHandlerKind.Block;\n}\n\nexport function isEventHandlerProcessor<T extends SubqlNetworkFilter, E>(\n  hp: SecondLayerHandlerProcessor<SubqlHandlerKind, T, unknown>\n): hp is SecondLayerHandlerProcessor<SubqlHandlerKind.Event, T, E> {\n  return hp.baseHandlerKind === SubqlHandlerKind.Event;\n}\n\nexport function isCallHandlerProcessor<T extends SubqlNetworkFilter, E>(\n  hp: SecondLayerHandlerProcessor<SubqlHandlerKind, T, unknown>\n): hp is SecondLayerHandlerProcessor<SubqlHandlerKind.Call, T, E> {\n  return hp.baseHandlerKind === SubqlHandlerKind.Call;\n}\n\nexport function isCustomDs<F extends SubqlNetworkFilter>(ds: SubqlDatasource): ds is SubqlCustomDatasource<string, F> {\n  return ds.kind !== SubqlDatasourceKind.Runtime && !!(ds as SubqlCustomDatasource<string, F>).processor;\n}\n\nexport function isRuntimeDs(ds: SubqlDatasource): ds is SubqlRuntimeDatasource {\n  return ds.kind === SubqlDatasourceKind.Runtime;\n}\n"]}