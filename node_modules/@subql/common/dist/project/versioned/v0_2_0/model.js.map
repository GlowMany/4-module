{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../src/project/versioned/v0_2_0/model.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  SubqlCustomDatasource,\n  SubqlCustomHandler,\n  SubqlMapping,\n  SubqlNetworkFilter,\n  SubqlRuntimeHandler,\n} from '@subql/types';\nimport {plainToClass, Type} from 'class-transformer';\nimport {Equals, IsArray, IsObject, IsOptional, IsString, ValidateNested, validateSync} from 'class-validator';\nimport yaml from 'js-yaml';\nimport {CustomDataSourceBase, Mapping, RuntimeDataSourceBase} from '../../models';\nimport {ProjectManifestBaseImpl} from '../base';\nimport {CustomDatasourceV0_2_0, ProjectManifestV0_2_0, RuntimeDataSourceV0_2_0, SubqlMappingV0_2_0} from './types';\n\nexport class FileType {\n  @IsString()\n  file: string;\n}\n\nexport class ProjectNetworkDeploymentV0_2_0 {\n  @IsString()\n  genesisHash: string;\n  @ValidateNested()\n  @Type(() => FileType)\n  @IsOptional()\n  chaintypes?: FileType;\n}\n\nexport class ProjectNetworkV0_2_0 extends ProjectNetworkDeploymentV0_2_0 {\n  @IsString()\n  @IsOptional()\n  endpoint?: string;\n  @IsString()\n  @IsOptional()\n  dictionary?: string;\n}\n\nexport class ProjectMappingV0_2_0 extends Mapping {\n  @IsString()\n  file: string;\n}\n\nexport class RuntimeDataSourceV0_2_0Impl\n  extends RuntimeDataSourceBase<SubqlMappingV0_2_0<SubqlRuntimeHandler>>\n  implements RuntimeDataSourceV0_2_0\n{\n  @Type(() => ProjectMappingV0_2_0)\n  @ValidateNested()\n  mapping: SubqlMappingV0_2_0<SubqlRuntimeHandler>;\n}\n\nexport class CustomDataSourceV0_2_0Impl<\n    K extends string = string,\n    T extends SubqlNetworkFilter = SubqlNetworkFilter,\n    M extends SubqlMapping = SubqlMapping<SubqlCustomHandler>\n  >\n  extends CustomDataSourceBase<K, T, M>\n  implements SubqlCustomDatasource<K, T, M> {}\n\nexport class DeploymentV0_2_0 {\n  @Equals('0.2.0')\n  @IsString()\n  specVersion: string;\n  @ValidateNested()\n  @Type(() => FileType)\n  schema: FileType;\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CustomDataSourceV0_2_0Impl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: RuntimeDataSourceV0_2_0Impl, name: 'substrate/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources: (RuntimeDataSourceV0_2_0 | CustomDatasourceV0_2_0)[];\n  @ValidateNested()\n  @Type(() => ProjectNetworkDeploymentV0_2_0)\n  network: ProjectNetworkDeploymentV0_2_0;\n}\n\nexport class ProjectManifestV0_2_0Impl extends ProjectManifestBaseImpl implements ProjectManifestV0_2_0 {\n  @Equals('0.2.0')\n  specVersion: string;\n  @IsString()\n  name: string;\n  @IsString()\n  version: string;\n  @IsObject()\n  @ValidateNested()\n  @Type(() => ProjectNetworkV0_2_0)\n  network: ProjectNetworkV0_2_0;\n  @ValidateNested()\n  @Type(() => FileType)\n  schema: FileType;\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CustomDataSourceV0_2_0Impl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: RuntimeDataSourceV0_2_0Impl, name: 'substrate/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources: (RuntimeDataSourceV0_2_0 | CustomDatasourceV0_2_0)[];\n  private _deployment: DeploymentV0_2_0;\n\n  toDeployment(): string {\n    return yaml.dump(this._deployment, {\n      sortKeys: true,\n      condenseFlow: true,\n    });\n  }\n\n  get deployment(): DeploymentV0_2_0 {\n    if (!this._deployment) {\n      this._deployment = plainToClass(DeploymentV0_2_0, this);\n      validateSync(this._deployment, {whitelist: true});\n    }\n    return this._deployment;\n  }\n\n  validate(): void {\n    const errors = validateSync(this.deployment, {whitelist: true, forbidNonWhitelisted: true});\n    if (errors?.length) {\n      // TODO: print error details\n      const errorMsgs = errors.map((e) => e.toString()).join('\\n');\n      throw new Error(`failed to parse project.yaml.\\n${errorMsgs}`);\n    }\n  }\n}\n"]}