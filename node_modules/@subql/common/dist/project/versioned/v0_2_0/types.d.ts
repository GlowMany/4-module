import { SubqlCustomDatasource, SubqlCustomHandler, SubqlDatasource, SubqlHandler, SubqlMapping, SubqlNetworkFilter, SubqlRuntimeDatasource, SubqlRuntimeHandler } from '@subql/types';
import { IProjectManifest } from '../../types';
export interface SubqlMappingV0_2_0<T extends SubqlHandler> extends SubqlMapping<T> {
    file: string;
}
export declare type RuntimeDataSourceV0_2_0 = SubqlRuntimeDatasource<SubqlMappingV0_2_0<SubqlRuntimeHandler>>;
export declare type CustomDatasourceV0_2_0 = SubqlCustomDatasource<string, SubqlNetworkFilter, SubqlMappingV0_2_0<SubqlCustomHandler>>;
export interface ProjectManifestV0_2_0 extends IProjectManifest {
    name: string;
    version: string;
    schema: {
        file: string;
    };
    network: {
        genesisHash: string;
        endpoint?: string;
        dictionary?: string;
        chaintypes?: {
            file: string;
        };
    };
    dataSources: (RuntimeDataSourceV0_2_0 | CustomDatasourceV0_2_0)[];
}
export declare function isRuntimeDataSourceV0_2_0(dataSource: SubqlDatasource): dataSource is RuntimeDataSourceV0_2_0;
