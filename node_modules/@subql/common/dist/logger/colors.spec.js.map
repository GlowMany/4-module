{"version":3,"file":"colors.spec.js","sourceRoot":"","sources":["../../src/logger/colors.spec.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;AAEtC,qCAAuC;AAEvC,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;QACzD,MAAM,KAAK,GAAG,IAAA,sBAAa,EAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACtD,MAAM,KAAK,GAAG,IAAA,sBAAa,EAAC,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {colorizeLevel} from './colors';\n\ndescribe('LoggerColorLevel', () => {\n  it('returns default for an unsupported level number', () => {\n    const level = colorizeLevel(5);\n    expect(level).toBe('\\x1b[37mUSERLVL\\x1b[39m');\n  });\n\n  it('returns the correct level for a level number', () => {\n    const level = colorizeLevel(60);\n    expect(level).toBe('\\x1b[41mFATAL\\x1b[49m');\n  });\n});\n"]}