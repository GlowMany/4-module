{"version":3,"file":"Bytes.js","sourceRoot":"","sources":["../../../src/types/supported/Bytes.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,yCAA+C;AAC/C,yCAAoC;AACpC,4CAAuC;AAE1B,QAAA,KAAK,GAAG,IAAI,qBAAS,CAChC,OAAO,EACP,CAAC,IAAyB,EAAc,EAAE;IACxC,IAAI,IAAI,YAAY,UAAU;QAAE,OAAO,IAAI,CAAC;IAC5C,IAAI,IAAA,YAAK,EAAC,IAAI,CAAC,EAAE;QACf,OAAO,IAAA,eAAQ,EAAC,IAAI,CAAC,CAAC;KACvB;IACD,MAAM,IAAI,KAAK,CAAC,gBAAgB,IAAI,EAAE,CAAC,CAAC;AAC1C,CAAC,EACD,QAAQ,EACR,OAAO,EACP,qBAAS,CAAC,IAAI,CACf,CAAC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {isHex, hexToU8a} from '@polkadot/util';\nimport {DataTypes} from 'sequelize';\nimport {TypeClass} from '../TypeClass';\n\nexport const Bytes = new TypeClass(\n  'Bytes',\n  (data: string | Uint8Array): Uint8Array => {\n    if (data instanceof Uint8Array) return data;\n    if (isHex(data)) {\n      return hexToU8a(data);\n    }\n    throw new Error(`can not hash ${data}`);\n  },\n  'string',\n  'Bytes',\n  DataTypes.BLOB\n);\n"]}