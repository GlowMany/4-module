{"version":3,"file":"generalTypes.spec.js","sourceRoot":"","sources":["../../src/types/generalTypes.spec.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;AAEtC,0CAAkD;AAElD,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,SAAS,GAAG,IAAA,4BAAmB,EAAC,MAAM,CAAC,CAAC;QAC9C,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,MAAM,SAAS,GAAG,IAAA,4BAAmB,EAAC,MAAM,CAAC,CAAC;QAC9C,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {getTypeByScalarName} from '@subql/common';\n\ndescribe('general types', () => {\n  it('can get json type', () => {\n    const typeClass = getTypeByScalarName('Json');\n    expect(typeClass.name).toBe('Json');\n  });\n\n  it('get sequelize date type', () => {\n    const typeClass = getTypeByScalarName('Date');\n    expect(typeClass.sequelizeType).toBe('timestamp');\n  });\n});\n"]}