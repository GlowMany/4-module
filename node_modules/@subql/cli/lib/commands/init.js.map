{"version":3,"file":"init.js","sourceRoot":"","sources":["../../src/commands/init.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport fs from 'fs';\nimport path from 'path';\nimport {Command, flags} from '@oclif/command';\nimport cli from 'cli-ux';\nimport {createProject, installDependencies} from '../controller/init-controller';\nimport {getGenesisHash} from '../jsonrpc';\nimport {ProjectSpecBase, ProjectSpecV0_2_0} from '../types';\n\nexport default class Init extends Command {\n  static description = 'Initialize a scaffold subquery project';\n\n  static flags = {\n    force: flags.boolean({char: 'f'}),\n    starter: flags.boolean({\n      default: true,\n    }),\n    location: flags.string({char: 'l', description: 'local folder to create the project in'}),\n    'install-dependencies': flags.boolean({description: 'Install dependencies as well', default: false}),\n    npm: flags.boolean({description: 'Force using NPM instead of yarn, only works with `install-dependencies` flag'}),\n    specVersion: flags.string({\n      required: false,\n      options: ['0.0.1', '0.2.0'],\n      default: '0.2.0',\n      description: 'The spec version to be used by the project',\n    }),\n  };\n\n  static args = [\n    {\n      name: 'projectName',\n      description: 'Give the starter project name',\n    },\n  ];\n\n  async run(): Promise<void> {\n    const {args, flags} = this.parse(Init);\n    const project = {} as ProjectSpecBase;\n\n    const location = flags.location ? path.resolve(flags.location) : process.cwd();\n\n    project.name = args.projectName\n      ? args.projectName\n      : await cli.prompt('Project name', {default: 'subql-starter', required: true});\n    if (fs.existsSync(path.join(location, `${project.name}`))) {\n      throw new Error(`Directory ${project.name} exists, try another project name`);\n    }\n    project.repository = await cli.prompt('Git repository', {required: false});\n\n    project.endpoint = await cli.prompt('RPC endpoint', {\n      default: 'wss://polkadot.api.onfinality.io/public-ws',\n      required: true,\n    });\n\n    if (flags.specVersion === '0.2.0') {\n      cli.action.start('Getting network genesis hash');\n      (project as ProjectSpecV0_2_0).genesisHash = await getGenesisHash(project.endpoint);\n      cli.action.stop();\n    }\n\n    this.log('Prompting remaining details');\n    project.author = await cli.prompt('Authors', {required: true});\n    project.description = await cli.prompt('Description', {required: false});\n    project.version = await cli.prompt('Version:', {default: '1.0.0', required: true});\n    project.license = await cli.prompt('License:', {default: 'MIT', required: true});\n\n    if (flags.starter && project.name) {\n      try {\n        cli.action.start('Init the starter package');\n        const projectPath = await createProject(location, project);\n        cli.action.stop();\n\n        if (flags['install-dependencies']) {\n          cli.action.start('Installing dependencies');\n          installDependencies(projectPath, flags.npm);\n          cli.action.stop();\n        }\n\n        this.log(`${project.name} is ready`);\n\n        /*\n         * Explicitly exit because getGenesisHash creates a polkadot api instance that keeps running\n         * Disconnecting the api causes undesired logging that cannot be disabled\n         */\n        process.exit(0);\n      } catch (e) {\n        /* handle all errors here */\n        this.error(e.message);\n      }\n    }\n  }\n}\n"]}