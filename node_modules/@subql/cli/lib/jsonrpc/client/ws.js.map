{"version":3,"file":"ws.js","sourceRoot":"","sources":["../../../src/jsonrpc/client/ws.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {ICloseEvent, w3cwebsocket as WebSocket} from 'websocket';\nimport {Request, ResponseSuccessType} from './types';\n\nlet id = 0;\nexport class WsJsonRpcClient {\n  static async with<T>(url: string, callback: (client: WsJsonRpcClient) => Promise<T>): Promise<T> {\n    const client = new WsJsonRpcClient(url);\n    await client.isReady;\n    const ret = await callback(client);\n    client.destroy();\n    return ret;\n  }\n\n  isReady: Promise<WsJsonRpcClient>;\n  protected _ws: WebSocket;\n  protected isDestroyed = false;\n\n  protected handlers: {[id: string]: any};\n\n  constructor(protected address: string) {\n    this.handlers = {};\n    this.connect();\n  }\n\n  connect(): void {\n    try {\n      this._ws = new WebSocket(this.address);\n\n      this.isReady = new Promise((resolve) => {\n        this._ws.onopen = () => resolve(this);\n      });\n\n      this._ws.onclose = this.onSocketClose;\n      this._ws.onmessage = this.onSocketMessage;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async send<T extends ResponseSuccessType>(method: string, params?: any[]): Promise<T> {\n    await this.isReady;\n    const req: Request = {jsonrpc: '2.0', id: id++, method, params};\n    this._ws.send(JSON.stringify(req));\n    return new Promise<T>((resolve, reject) => {\n      this.handlers[req.id] = [resolve, reject];\n    });\n  }\n\n  destroy(): void {\n    this.isDestroyed = true;\n    this._ws.close();\n  }\n\n  private onSocketClose = (event: ICloseEvent): void => {\n    if (this.isDestroyed) return;\n\n    console.error(`disconnected from ${this.address} code: '${event.code}' reason: '${event.reason}'`);\n    setTimeout((): void => {\n      this.connect();\n    }, 1000);\n  };\n\n  private onSocketMessage = ({data: dataStr}: {data: string}) => {\n    try {\n      const data = JSON.parse(String(dataStr));\n      if (data.id !== undefined && data.id !== null && this.handlers[data.id]) {\n        const [resolve, reject] = this.handlers[data.id];\n        delete this.handlers[data.id];\n        if (data.error) {\n          reject(data.error);\n        } else {\n          resolve(data.result);\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n}\n"]}