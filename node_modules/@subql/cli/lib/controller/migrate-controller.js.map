{"version":3,"file":"migrate-controller.js","sourceRoot":"","sources":["../../src/controller/migrate-controller.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;;AAEtC,yDAAoB;AACpB,6DAAwB;AACxB,0CAMuB;AACvB,mCAA2B;AAC3B,mEAA2B;AAC3B,wCAA0C;AAG1C,MAAM,aAAa,GAAG,cAAc,CAAC;AACrC,MAAM,gBAAgB,GAAG,oBAAoB,CAAC;AAC9C,MAAM,gBAAgB,GAAG,oBAAoB,CAAC;AAEvC,KAAK,UAAU,OAAO,CAC3B,QAAgB,EAChB,QAAkC;IAElC,MAAM,WAAW,GAAG,MAAM,YAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,eAAe,EAAE,MAAM,CAAC,CAAC;IACnF,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAChD,IAAI,sBAA8B,CAAC;IACnC,MAAM,OAAO,GAAG,EAAuB,CAAC;IACxC,MAAM,gBAAgB,GAAG,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC;IACnD,OAAO,CAAC,IAAI,GAAG,MAAM,YAAG,CAAC,MAAM,CAAC,cAAc,EAAE,EAAC,OAAO,EAAE,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;IACjG,OAAO,CAAC,OAAO,GAAG,MAAM,YAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAC,OAAO,EAAE,eAAe,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;IAC1G,YAAG,CAAC,MAAM,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;IAC/D,MAAM,WAAW,GAAG,MAAM,IAAA,wBAAc,EAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACpE,YAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAClB,OAAO,CAAC,WAAW,GAAG,MAAM,YAAG,CAAC,MAAM,CAAC,qCAAqC,EAAE,EAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;IACtH,IACE,gBAAgB,CAAC,KAAK;QACtB,gBAAgB,CAAC,UAAU;QAC3B,gBAAgB,CAAC,WAAW;QAC5B,gBAAgB,CAAC,UAAU;QAC3B,gBAAgB,CAAC,SAAS,EAC1B;QACA,sBAAsB,GAAG,MAAM,YAAG,CAAC,MAAM,CAAC,yCAAyC,EAAE;YACnF,OAAO,EAAE,cAAc;YACvB,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,MAAM,EAAC,GAAG,EAAC,GAAG,cAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;QACjD,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,OAAO,EAAE;YACxD,MAAM,IAAI,KAAK,CAAC,aAAa,GAAG,gBAAgB,CAAC,CAAC;SACnD;QACD,MAAM,qBAAqB,GAAG,cAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,sBAAsB,CAAC,CAAC;QAC1E,oDAAoD;QACpD,IAAI,YAAE,CAAC,UAAU,CAAC,qBAAqB,CAAC,EAAE;YACxC,IAAI,MAAM,YAAG,CAAC,OAAO,CAAC,GAAG,qBAAqB,+CAA+C,CAAC,EAAE;gBAC9F,MAAM,gBAAgB,CAAC,gBAAgB,EAAE,qBAAqB,EAAE,GAAG,CAAC,CAAC;aACtE;SACF;aAAM;YACL,MAAM,gBAAgB,CAAC,gBAAgB,EAAE,qBAAqB,EAAE,GAAG,CAAC,CAAC;SACtE;KACF;IACD,qBAAqB;IACrB,KAAK,MAAM,UAAU,IAAI,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE;QACtD,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,YAAG,CAAC,MAAM,CACxC,qDAAqD,UAAU,CAAC,IAAI,aAAa,EACjF;YACE,OAAO,EAAE,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,eAAe,CAAC,IAAI,EAAE;YAC9G,QAAQ,EAAE,IAAI;SACf,CACF,CAAC;QACF,OAAO,UAAU,CAAC,IAAI,CAAC;QACvB,MAAM,QAAQ,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC7C,OAAO,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,kBAAkB;QACtD,UAAU,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACxC;IACD,OAAO,CAAC,OAAO,EAAE,sBAAsB,CAAC,CAAC;AAC3C,CAAC;AAvDD,0BAuDC;AAEM,KAAK,UAAU,OAAO,CAC3B,WAAmB,EACnB,OAA0B,EAC1B,QAAkC,EAClC,UAAmB;;IAEnB,MAAM,kBAAkB,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACjE,MAAM,cAAc,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;IAChE,MAAM,cAAc,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;IAEhE,IAAI;QACF,MAAM,IAAI,GAAG,EAA2B,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,MAAA,QAAQ,CAAC,QAAQ,CAAC,WAAW,mCAAI,EAAE,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,MAAA,QAAQ,CAAC,QAAQ,CAAC,UAAU,mCAAI,EAAE,CAAC;QACrD,IAAI,CAAC,MAAM,GAAG,EAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG;YACb,WAAW,EAAE,OAAO,CAAC,WAAW;YAChC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ;SAC7C,CAAC;QACF,IAAI,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE;YACxC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC;SAChE;QACD,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC;SAC9C;QACD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC;QACjD,MAAM,OAAO,GAAG,iBAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,YAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;KAC9D;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,EAAE,CAAC,CAAC;KACnD;IACD,uCAAuC;IACvC,IAAI;QACF,IAAA,4BAAmB,EAAC,cAAc,CAAC,CAAC,QAAQ,CAAC;KAC9C;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,GAAG,cAAc,kDAAkD,CAAC,EAAE,CAAC,CAAC;QACtF,MAAM,IAAI,GAAG,MAAM,YAAG,CAAC,OAAO,CAAC,6BAA6B,cAAc,qCAAqC,CAAC,CAAC;QACjH,IAAI,IAAI,EAAE;YACR,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;aAAM;YACL,MAAM,YAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YACzC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;KACF;IACD,YAAY;IACZ,MAAM,UAAU,CAAC,kBAAkB,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;AACvE,CAAC;AAjDD,0BAiDC;AAED,KAAK,UAAU,UAAU,CAAC,kBAA0B,EAAE,cAAsB,EAAE,cAAsB;IAClG,IAAI;QACF,MAAM,YAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC;KAC9D;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,kBAAkB,kBAAkB,OAAO,cAAc,IAAI,CAAC,EAAE,CAAC,CAAC;KACnF;IACD,IAAI;QACF,MAAM,YAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;KAC9D;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,kBAAkB,cAAc,OAAO,kBAAkB,IAAI,CAAC,EAAE,CAAC,CAAC;KACnF;AACH,CAAC;AAEM,KAAK,UAAU,gBAAgB,CACpC,gBAAsC,EACtC,YAAoB,EACpB,GAAW;IAEX,MAAM,IAAI,GAAG,EAAgB,CAAC;IAC9B,IAAI,gBAAgB,CAAC,KAAK;QAAE,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC;IAChE,IAAI,gBAAgB,CAAC,WAAW;QAAE,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,WAAW,CAAC;IAClF,IAAI,gBAAgB,CAAC,UAAU;QAAE,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,UAAU,CAAC;IAC/E,IAAI,gBAAgB,CAAC,UAAU;QAAE,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,UAAU,CAAC;IAC/E,IAAI,gBAAgB,CAAC,SAAS;QAAE,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,SAAS,CAAC;IAE7E,IAAI,GAAG,KAAK,OAAO,EAAE;QACnB,MAAM,YAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;KAC1E;SAAM;QACL,MAAM,YAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,iBAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;KACpE;IACD,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;AACzC,CAAC;AAlBD,4CAkBC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport fs from 'fs';\nimport path from 'path';\nimport {\n  loadProjectManifest,\n  ProjectManifestV0_2_0,\n  ProjectManifestVersioned,\n  ProjectNetworkV0_0_1,\n  ChainTypes,\n} from '@subql/common';\nimport {cli} from 'cli-ux';\nimport yaml from 'js-yaml';\nimport {getGenesisHash} from '../jsonrpc';\nimport {ProjectSpecV0_2_0} from '../types';\n\nconst MANIFEST_PATH = 'project.yaml';\nconst MANIFEST_V_0_0_1 = `project_0_0_1.yaml`;\nconst MANIFEST_V_0_2_0 = `project_0_2_0.yaml`;\n\nexport async function prepare(\n  location: string,\n  manifest: ProjectManifestVersioned\n): Promise<[ProjectSpecV0_2_0, string]> {\n  const packageData = await fs.promises.readFile(`${location}/package.json`, 'utf8');\n  const jsonProjectData = JSON.parse(packageData);\n  let chainTypesRelativePath: string;\n  const project = {} as ProjectSpecV0_2_0;\n  const projectV1Network = manifest.asV0_0_1.network;\n  project.name = await cli.prompt('Project name', {default: jsonProjectData.name, required: true});\n  project.version = await cli.prompt('Project version', {default: jsonProjectData.version, required: true});\n  cli.action.start('Getting network genesis hash from endpoint');\n  const genesisHash = await getGenesisHash(projectV1Network.endpoint);\n  cli.action.stop();\n  project.genesisHash = await cli.prompt('Please confirm network genesis hash', {default: genesisHash, required: true});\n  if (\n    projectV1Network.types ||\n    projectV1Network.typesAlias ||\n    projectV1Network.typesBundle ||\n    projectV1Network.typesChain ||\n    projectV1Network.typesSpec\n  ) {\n    chainTypesRelativePath = await cli.prompt('Please provide network chain types path', {\n      default: './types.json',\n      required: true,\n    });\n    const {ext} = path.parse(chainTypesRelativePath);\n    if (ext !== '.yaml' && ext !== '.yml' && ext !== '.json') {\n      throw new Error(`Extension ${ext} not supported`);\n    }\n    const projectChainTypesPath = path.join(location, chainTypesRelativePath);\n    //check if the file path is exist, if not create one\n    if (fs.existsSync(projectChainTypesPath)) {\n      if (await cli.confirm(`${projectChainTypesPath} already exist, do you want override it [Y/N]`)) {\n        await createChainTypes(projectV1Network, projectChainTypesPath, ext);\n      }\n    } else {\n      await createChainTypes(projectV1Network, projectChainTypesPath, ext);\n    }\n  }\n  //Patch manifest here\n  for (const dataSource of manifest.asV0_2_0.dataSources) {\n    dataSource.mapping.file = await cli.prompt(\n      `Please provide relative entry path for dataSource ${dataSource.name}'s mapping `,\n      {\n        default: jsonProjectData.main.toString().startsWith('./') ? jsonProjectData.main : `./${jsonProjectData.main}`,\n        required: true,\n      }\n    );\n    delete dataSource.name;\n    const handlers = dataSource.mapping.handlers;\n    delete dataSource.mapping.handlers; // adjust position\n    dataSource.mapping.handlers = handlers;\n  }\n  return [project, chainTypesRelativePath];\n}\n\nexport async function migrate(\n  projectPath: string,\n  project: ProjectSpecV0_2_0,\n  manifest: ProjectManifestVersioned,\n  chainTypes?: string\n): Promise<void> {\n  const originManifestPath = path.join(projectPath, MANIFEST_PATH);\n  const manifestV0_0_1 = path.join(projectPath, MANIFEST_V_0_0_1);\n  const manifestV0_2_0 = path.join(projectPath, MANIFEST_V_0_2_0);\n\n  try {\n    const data = {} as ProjectManifestV0_2_0;\n    data.specVersion = '0.2.0';\n    data.name = project.name;\n    data.version = project.version;\n    data.description = manifest.asV0_2_0.description ?? '';\n    data.repository = manifest.asV0_2_0.repository ?? '';\n    data.schema = {file: manifest.asV0_0_1.schema};\n    data.network = {\n      genesisHash: project.genesisHash,\n      endpoint: manifest.asV0_0_1.network.endpoint,\n    };\n    if (manifest.asV0_0_1.network.dictionary) {\n      data.network.dictionary = manifest.asV0_0_1.network.dictionary;\n    }\n    if (chainTypes) {\n      data.network.chaintypes = {file: chainTypes};\n    }\n    data.dataSources = manifest.asV0_2_0.dataSources;\n    const newYaml = yaml.dump(data);\n    await fs.promises.writeFile(manifestV0_2_0, newYaml, 'utf8');\n  } catch (e) {\n    throw new Error(`Fail to create manifest : ${e}`);\n  }\n  //validate before backup and conversion\n  try {\n    loadProjectManifest(manifestV0_2_0).isV0_2_0;\n  } catch (e) {\n    console.error(`${manifestV0_2_0} failed validation for manifest spec 0.2.0, \\n ${e}`);\n    const keep = await cli.confirm(`However, do you want keep ${manifestV0_2_0} for inspection before retry? [Y/N]`);\n    if (keep) {\n      process.exit(0);\n    } else {\n      await fs.promises.unlink(manifestV0_2_0);\n      process.exit(0);\n    }\n  }\n  //conversion\n  await conversion(originManifestPath, manifestV0_0_1, manifestV0_2_0);\n}\n\nasync function conversion(originManifestPath: string, manifestV0_0_1: string, manifestV0_2_0: string): Promise<void> {\n  try {\n    await fs.promises.rename(originManifestPath, manifestV0_0_1);\n  } catch (e) {\n    throw new Error(`Failed convert ${originManifestPath} to ${manifestV0_0_1},${e}`);\n  }\n  try {\n    await fs.promises.rename(manifestV0_2_0, originManifestPath);\n  } catch (e) {\n    throw new Error(`Failed convert ${manifestV0_2_0} to ${originManifestPath},${e}`);\n  }\n}\n\nexport async function createChainTypes(\n  projectV1Network: ProjectNetworkV0_0_1,\n  absolutePath: string,\n  ext: string\n): Promise<void> {\n  const data = {} as ChainTypes;\n  if (projectV1Network.types) data.types = projectV1Network.types;\n  if (projectV1Network.typesBundle) data.typesBundle = projectV1Network.typesBundle;\n  if (projectV1Network.typesAlias) data.typesAlias = projectV1Network.typesAlias;\n  if (projectV1Network.typesChain) data.typesChain = projectV1Network.typesChain;\n  if (projectV1Network.typesSpec) data.typesChain = projectV1Network.typesSpec;\n\n  if (ext === '.json') {\n    await fs.promises.writeFile(absolutePath, JSON.stringify(data, null, 2));\n  } else {\n    await fs.promises.writeFile(absolutePath, yaml.dump(data), 'utf8');\n  }\n  console.log(`* chainTypes is created`);\n}\n"]}