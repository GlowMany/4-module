{"version":3,"sources":["../source/validatePhoneNumberLength.js"],"names":["validatePhoneNumberLength","arguments","text","options","metadata","extract","phoneNumber","Metadata","selectNumberingPlan","countryCallingCode","result","nationalNumber","error","ParseError","message"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEe,SAASA,yBAAT,GAAqC;AAAA,4BACjB,0CAAmBC,SAAnB,CADiB;AAAA,MAC7CC,IAD6C,uBAC7CA,IAD6C;AAAA,MACvCC,OADuC,uBACvCA,OADuC;AAAA,MAC9BC,QAD8B,uBAC9BA,QAD8B;;AAEnDD,EAAAA,OAAO,qBACHA,OADG;AAENE,IAAAA,OAAO,EAAE,KAFH,CAKP;;AALO,IAAP;;AAMA,MAAI;AACH,QAAMC,WAAW,GAAG,mCAAiBJ,IAAjB,EAAuBC,OAAvB,EAAgCC,QAAhC,CAApB;AACAA,IAAAA,QAAQ,GAAG,IAAIG,oBAAJ,CAAaH,QAAb,CAAX;AACAA,IAAAA,QAAQ,CAACI,mBAAT,CAA6BF,WAAW,CAACG,kBAAzC;AACA,QAAMC,MAAM,GAAG,mCAAkBJ,WAAW,CAACK,cAA9B,EAA8CP,QAA9C,CAAf;;AACA,QAAIM,MAAM,KAAK,aAAf,EAA8B;AAC7B,aAAOA,MAAP;AACA;AACD,GARD,CAQE,OAAOE,KAAP,EAAc;AACf;AACA,QAAIA,KAAK,YAAYC,sBAArB,EAAiC;AAChC,aAAOD,KAAK,CAACE,OAAb;AACA,KAFD,MAEO;AACN,YAAMF,KAAN;AACA;AACD;AACD","sourcesContent":["import { normalizeArguments } from './parsePhoneNumber'\r\nimport parsePhoneNumber from './parsePhoneNumber_'\r\nimport ParseError from './ParseError'\r\nimport Metadata from './metadata'\r\nimport checkNumberLength from './helpers/checkNumberLength'\r\n\r\nexport default function validatePhoneNumberLength() {\r\n\tlet { text, options, metadata } = normalizeArguments(arguments)\r\n\toptions = {\r\n\t\t...options,\r\n\t\textract: false\r\n\t}\r\n\r\n\t// Parse phone number.\r\n\ttry {\r\n\t\tconst phoneNumber = parsePhoneNumber(text, options, metadata)\r\n\t\tmetadata = new Metadata(metadata)\r\n\t\tmetadata.selectNumberingPlan(phoneNumber.countryCallingCode)\r\n\t\tconst result = checkNumberLength(phoneNumber.nationalNumber, metadata)\r\n\t\tif (result !== 'IS_POSSIBLE') {\r\n\t\t\treturn result\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (error instanceof ParseError) {\r\n\t\t\treturn error.message\r\n\t\t} else {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}"],"file":"validatePhoneNumberLength.js"}