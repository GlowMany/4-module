{"version":3,"sources":["../source/findPhoneNumbersInText.test.js"],"names":["describe","it","metadata","number","should","equal","defaultCountry","undefined","NUMBERS","results","i","length","defaultCallingCode"],"mappings":";;AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,wBAAD,EAA2B,YAAM;AACxCC,EAAAA,EAAE,CAAC,0DAAD,EAA6D,YAAM;AACpE,4CAAuB,oBAAvB,EAA6C,IAA7C,EAAmDC,uBAAnD,EAA6D,CAA7D,EAAgEC,MAAhE,CAAuEA,MAAvE,CAA8EC,MAA9E,CAAqFC,KAArF,CAA2F,cAA3F;AACA,GAFC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,qEAAD,EAAwE,YAAM;AAC/E,4CAAuB,oBAAvB,EAA6C;AAAEK,MAAAA,cAAc,EAAE;AAAlB,KAA7C,EAAuEJ,uBAAvE,EAAiF,CAAjF,EAAoFC,MAApF,CAA2FA,MAA3F,CAAkGC,MAAlG,CAAyGC,KAAzG,CAA+G,cAA/G;AACA,GAFC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,sEAAD,EAAyE,YAAM;AAChF,4CAAuB,oBAAvB,EAA6C,IAA7C,EAAmD,EAAnD,EAAuDC,uBAAvD,EAAiE,CAAjE,EAAoEC,MAApE,CAA2EA,MAA3E,CAAkFC,MAAlF,CAAyFC,KAAzF,CAA+F,cAA/F;AACA,GAFC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,2EAAD,EAA8E,YAAM;AACrF,4CAAuB,oBAAvB,EAA6CM,SAA7C,EAAwD,EAAxD,EAA4DL,uBAA5D,EAAsE,CAAtE,EAAyEC,MAAzE,CAAgFA,MAAhF,CAAuFC,MAAvF,CAA8FC,KAA9F,CAAoG,cAApG;AACA,GAFC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,2EAAD,EAA8E,YAAM;AACrF,4CAAuB,oBAAvB,EAA6C,IAA7C,EAAmDM,SAAnD,EAA8DL,uBAA9D,EAAwE,CAAxE,EAA2EC,MAA3E,CAAkFA,MAAlF,CAAyFC,MAAzF,CAAgGC,KAAhG,CAAsG,cAAtG;AACA,GAFC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,gEAAD,EAAmE,YAAM;AAC1E,4CAAuB,oBAAvB,EAA6CM,SAA7C,EAAwDL,uBAAxD,EAAkE,CAAlE,EAAqEC,MAArE,CAA4EA,MAA5E,CAAmFC,MAAnF,CAA0FC,KAA1F,CAAgG,cAAhG;AACA,GAFC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,mCAAD,EAAsC,YAAM;AAC7C,QAAMO,OAAO,GAAG,CAAC,cAAD,EAAiB,cAAjB,CAAhB;AACA,QAAMC,OAAO,GAAG,wCAAuB,qFAAvB,EAA8GP,uBAA9G,CAAhB;AACA,QAAIQ,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAGD,OAAO,CAACE,MAAnB,EAA2B;AAC1BF,MAAAA,OAAO,CAACC,CAAD,CAAP,CAAWP,MAAX,CAAkBA,MAAlB,CAAyBC,MAAzB,CAAgCC,KAAhC,CAAsCG,OAAO,CAACE,CAAD,CAA7C;AACAA,MAAAA,CAAC;AACD;AACD,GARC,CAAF;AAUAT,EAAAA,EAAE,CAAC,kEAAD,EAAqE,YAAM;AAC5E,QAAMO,OAAO,GAAG,CAAC,eAAD,CAAhB;AACA,QAAMC,OAAO,GAAG,wCAAuB,2BAAvB,EAAoD;AAAEG,MAAAA,kBAAkB,EAAE;AAAtB,KAApD,EAAmFV,uBAAnF,CAAhB;AACA,QAAIQ,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAGD,OAAO,CAACE,MAAnB,EAA2B;AAC1BF,MAAAA,OAAO,CAACC,CAAD,CAAP,CAAWP,MAAX,CAAkBA,MAAlB,CAAyBC,MAAzB,CAAgCC,KAAhC,CAAsCG,OAAO,CAACE,CAAD,CAA7C;AACAA,MAAAA,CAAC;AACD;AACD,GARC,CAAF;AASA,CA5CO,CAAR","sourcesContent":["import findPhoneNumbersInText from './findPhoneNumbersInText'\r\nimport metadata from '../metadata.min.json'\r\n\r\ndescribe('findPhoneNumbersInText', () => {\r\n\tit('should find phone numbers in text (with default country)', () => {\r\n\t\tfindPhoneNumbersInText('+7 (800) 555-35-35', 'US', metadata)[0].number.number.should.equal('+78005553535')\r\n\t})\r\n\r\n\tit('should find phone numbers in text (with default country in options)', () => {\r\n\t\tfindPhoneNumbersInText('+7 (800) 555-35-35', { defaultCountry: 'US' }, metadata)[0].number.number.should.equal('+78005553535')\r\n\t})\r\n\r\n\tit('should find phone numbers in text (with default country and options)', () => {\r\n\t\tfindPhoneNumbersInText('+7 (800) 555-35-35', 'US', {}, metadata)[0].number.number.should.equal('+78005553535')\r\n\t})\r\n\r\n\tit('should find phone numbers in text (without default country, with options)', () => {\r\n\t\tfindPhoneNumbersInText('+7 (800) 555-35-35', undefined, {}, metadata)[0].number.number.should.equal('+78005553535')\r\n\t})\r\n\r\n\tit('should find phone numbers in text (with default country, without options)', () => {\r\n\t\tfindPhoneNumbersInText('+7 (800) 555-35-35', 'US', undefined, metadata)[0].number.number.should.equal('+78005553535')\r\n\t})\r\n\r\n\tit('should find phone numbers in text (with empty default country)', () => {\r\n\t\tfindPhoneNumbersInText('+7 (800) 555-35-35', undefined, metadata)[0].number.number.should.equal('+78005553535')\r\n\t})\r\n\r\n\tit('should find phone numbers in text', () => {\r\n\t\tconst NUMBERS = ['+78005553535', '+12133734253']\r\n\t\tconst results = findPhoneNumbersInText('The number is +7 (800) 555-35-35 and not (213) 373-4253 as written in the document.', metadata)\r\n\t\tlet i = 0\r\n\t\twhile (i < results.length) {\r\n\t\t\tresults[i].number.number.should.equal(NUMBERS[i])\r\n\t\t\ti++\r\n\t\t}\r\n\t})\r\n\r\n\tit('should find phone numbers in text (default country calling code)', () => {\r\n\t\tconst NUMBERS = ['+870773111632']\r\n\t\tconst results = findPhoneNumbersInText('The number is 773 111 632', { defaultCallingCode: '870' }, metadata)\r\n\t\tlet i = 0\r\n\t\twhile (i < results.length) {\r\n\t\t\tresults[i].number.number.should.equal(NUMBERS[i])\r\n\t\t\ti++\r\n\t\t}\r\n\t})\r\n})"],"file":"findPhoneNumbersInText.test.js"}