{"version":3,"sources":["../source/isPossiblePhoneNumber.js"],"names":["isPossiblePhoneNumber","arguments","text","options","metadata","extract","phoneNumber","isPossible"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEe,SAASA,qBAAT,GAAiC;AAAA,4BACb,0CAAmBC,SAAnB,CADa;AAAA,MACzCC,IADyC,uBACzCA,IADyC;AAAA,MACnCC,OADmC,uBACnCA,OADmC;AAAA,MAC1BC,QAD0B,uBAC1BA,QAD0B;;AAE/CD,EAAAA,OAAO,qBACHA,OADG;AAENE,IAAAA,OAAO,EAAE;AAFH,IAAP;AAIA,MAAMC,WAAW,GAAG,6CAA2BJ,IAA3B,EAAiCC,OAAjC,EAA0CC,QAA1C,CAApB;AACA,SAAOE,WAAW,IAAIA,WAAW,CAACC,UAAZ,EAAf,IAA2C,KAAlD;AACA","sourcesContent":["import { normalizeArguments } from './parsePhoneNumber'\r\nimport parsePhoneNumberFromString from './parsePhoneNumberFromString_'\r\n\r\nexport default function isPossiblePhoneNumber() {\r\n\tlet { text, options, metadata } = normalizeArguments(arguments)\r\n\toptions = {\r\n\t\t...options,\r\n\t\textract: false\r\n\t}\r\n\tconst phoneNumber = parsePhoneNumberFromString(text, options, metadata)\r\n\treturn phoneNumber && phoneNumber.isPossible() || false\r\n}"],"file":"isPossiblePhoneNumber.js"}