{"version":3,"sources":["../source/findPhoneNumbers.js"],"names":["findPhoneNumbers","arguments","text","options","metadata","searchPhoneNumbers"],"mappings":";;;;;;;;AAGA;;AACA;;;;AAJA;AACA;AAKe,SAASA,gBAAT,GACf;AAAA,4BACqC,0CAAmBC,SAAnB,CADrC;AAAA,MACSC,IADT,uBACSA,IADT;AAAA,MACeC,OADf,uBACeA,OADf;AAAA,MACwBC,QADxB,uBACwBA,QADxB;;AAEC,SAAO,mCAAkBF,IAAlB,EAAwBC,OAAxB,EAAiCC,QAAjC,CAAP;AACA;AAED;;;;;AAGO,SAASC,kBAAT,GACP;AAAA,6BACqC,0CAAmBJ,SAAnB,CADrC;AAAA,MACSC,IADT,wBACSA,IADT;AAAA,MACeC,OADf,wBACeA,OADf;AAAA,MACwBC,QADxB,wBACwBA,QADxB;;AAEC,SAAO,2CAAoBF,IAApB,EAA0BC,OAA1B,EAAmCC,QAAnC,CAAP;AACA","sourcesContent":["// This is a legacy function.\r\n// Use `findNumbers()` instead.\r\n\r\nimport _findPhoneNumbers, { searchPhoneNumbers as _searchPhoneNumbers } from './findPhoneNumbers_'\r\nimport { normalizeArguments } from './parsePhoneNumber'\r\n\r\nexport default function findPhoneNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _findPhoneNumbers(text, options, metadata)\r\n}\r\n\r\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\r\nexport function searchPhoneNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _searchPhoneNumbers(text, options, metadata)\r\n}"],"file":"findPhoneNumbers.js"}