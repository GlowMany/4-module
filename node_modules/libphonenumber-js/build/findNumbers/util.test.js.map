{"version":3,"sources":["../../source/findNumbers/util.test.js"],"names":["describe","it","thrower","should","equal"],"mappings":";;AAAA;;AASAA,QAAQ,CAAC,kBAAD,EAAqB,YAC7B;AACCC,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YACnC;AACC,QAAIC,OAAO,GAAG;AAAA,aAAM,iBAAM,CAAN,EAAS,CAAT,CAAN;AAAA,KAAd;;AACAA,IAAAA,OAAO,CAACC,MAAR;;AAEAD,IAAAA,OAAO,GAAG;AAAA,aAAM,iBAAM,CAAC,CAAP,EAAU,CAAV,CAAN;AAAA,KAAV;;AACAA,IAAAA,OAAO,CAACC,MAAR;;AAEAD,IAAAA,OAAO,GAAG;AAAA,aAAM,iBAAM,CAAN,EAAS,CAAT,CAAN;AAAA,KAAV;;AACAA,IAAAA,OAAO,CAACC,MAAR;AACA,GAVC,CAAF;AAYAF,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YACjC;AACC,mCAAoB,IAApB,EAA0B,QAA1B,EAAoCE,MAApC,CAA2CC,KAA3C,CAAiD,KAAjD;AACA,mCAAoB,IAApB,EAA0B,KAA1B,EAAiCD,MAAjC,CAAwCC,KAAxC,CAA8C,KAA9C;AACA,GAJC,CAAF;AAMAH,EAAAA,EAAE,CAAC,sDAAD,EAAyD,YAC3D;AACC,0BAAW,OAAX,EAAoB,IAApB,EAA0BE,MAA1B,CAAiCC,KAAjC,CAAuC,IAAvC;AACA,0BAAW,KAAX,EAAkB,IAAlB,EAAwBD,MAAxB,CAA+BC,KAA/B,CAAqC,KAArC;AACA,GAJC,CAAF;AAMAH,EAAAA,EAAE,CAAC,oDAAD,EAAuD,YACzD;AACC,wBAAS,OAAT,EAAkB,IAAlB,EAAwBE,MAAxB,CAA+BC,KAA/B,CAAqC,IAArC;AACA,wBAAS,KAAT,EAAgB,IAAhB,EAAsBD,MAAtB,CAA6BC,KAA7B,CAAmC,KAAnC;AACA,GAJC,CAAF;AAKA,CA/BO,CAAR","sourcesContent":["import\r\n{\r\n\tlimit,\r\n\ttrimAfterFirstMatch,\r\n\tstartsWith,\r\n\tendsWith\r\n}\r\nfrom './util'\r\n\r\ndescribe('findNumbers/util', () =>\r\n{\r\n\tit('should generate regexp limit', () =>\r\n\t{\r\n\t\tlet thrower = () => limit(1, 0)\r\n\t\tthrower.should.throw()\r\n\r\n\t\tthrower = () => limit(-1, 1)\r\n\t\tthrower.should.throw()\r\n\r\n\t\tthrower = () => limit(0, 0)\r\n\t\tthrower.should.throw()\r\n\t})\r\n\r\n\tit('should trimAfterFirstMatch', () =>\r\n\t{\r\n\t\ttrimAfterFirstMatch(/\\d/, 'abc123').should.equal('abc')\r\n\t\ttrimAfterFirstMatch(/\\d/, 'abc').should.equal('abc')\r\n\t})\r\n\r\n\tit('should determine if a string starts with a substring', () =>\r\n\t{\r\n\t\tstartsWith('𐍈123', '𐍈').should.equal(true)\r\n\t\tstartsWith('1𐍈', '𐍈').should.equal(false)\r\n\t})\r\n\r\n\tit('should determine if a string ends with a substring', () =>\r\n\t{\r\n\t\tendsWith('123𐍈', '𐍈').should.equal(true)\r\n\t\tendsWith('𐍈1', '𐍈').should.equal(false)\r\n\t})\r\n})"],"file":"util.test.js"}