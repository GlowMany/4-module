import type { Observable } from 'rxjs';
import type { DecorateFn, DecorateMethodOptions, ObsInnerType, StorageEntryPromiseOverloads } from '../types';
interface Tracker<T> {
    reject: (value: Error) => Observable<never>;
    resolve: (value: T) => void;
}
export declare function promiseTracker<T>(resolve: (value: T) => void, reject: (value: Error) => void): Tracker<T>;
/**
 * @description Decorate method for ApiPromise, where the results are converted to the Promise equivalent
 */
export declare function toPromiseMethod<M extends DecorateFn<ObsInnerType<ReturnType<M>>>>(method: M, options?: DecorateMethodOptions): StorageEntryPromiseOverloads;
export {};
