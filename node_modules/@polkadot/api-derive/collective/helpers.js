// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
import { of } from 'rxjs';
import { isFunction } from '@polkadot/util';
import { memo } from "../util/index.js"; // We are re-exporting these from here to ensure that *.d.ts generation is correct

export function getInstance(api, section) {
  const instances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), section);
  return instances && instances.length ? instances[0] : section;
}
export function withSection(_section, fn) {
  return (instanceId, api) => memo(instanceId, fn(getInstance(api, _section), api, instanceId));
}
export function callMethod(method, empty) {
  return _section => withSection(_section, (section, api) => () => {
    var _api$query$section;

    return isFunction((_api$query$section = api.query[section]) === null || _api$query$section === void 0 ? void 0 : _api$query$section[method]) ? api.query[section][method]() : of(empty);
  });
}